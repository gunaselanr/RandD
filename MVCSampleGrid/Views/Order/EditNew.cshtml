@model MVCSampleGrid.Models.Order

@{
    ViewBag.Title = "EditNew";
}

<h2>EditNew</h2>
<script src="~/Scripts/jquery-1.8.2.js"></script>
<script src="~/Scripts/jquery-ui-1.8.24.js"></script>

<script src="~/Scripts/json2.js"></script>
<script src="~/Scripts/DataTables/jquery.dataTables.js"></script>
<link href="~/Content/DataTables/css/dataTables.jqueryui.css" rel="stylesheet" />

<script type="text/javascript">
    $(document).ready(function () {
        $(".tbl").dataTable({
            bLengthChange: false,
            bSort: true,
            bFilter: false,
            bInfor: false
        });

        var oTable = $(".tbl").dataTable();

        $("#OrderDate").datepicker({
            changeYear: true,
            changeMonth: true,
            minDate: 0,
            dateformat: "MM/dd/yyyy"
        });

    });

    function AddItem() {
        var itemId = 0;
        var productId = $("#DrpProducts").val();
        var productName = $("#DrpProducts option:selected").text();
        var unitPrice = $("#UnitPrice").val();
        var quantity = $('#Quantity').val();
        var amount = $('#Amount').val();

        $(".tbl").dataTable().fnAddData([itemId, productId, productName, unitPrice, quantity, amount]);
        $("#DrpProducts").val(-1);
        $("#UnitPrice").val("");
        $('#Quantity').val("");
        $('#Amount').val("");
    }

    function CalculateAmount() {
        var unitPrice = Number($("#UnitPrice").val()).toFixed(2);
        var quantity = Number($('#Quantity').val()).toFixed(2);
        var amount = (unitPrice * quantity).toFixed(2);

        $('#Amount').val(amount.toString());
    }

    function SaveOrder() {
        var salesOrderItems = { Id: 0, OrderId: 0, ProductId: 0, UnitPrice: "", Quantity: "", Amount: "" };
        var salesOrder = { Id: 0, OrderDate: "", OrderNumber: "", CustomerId: "", TotalAmount: "", OrderItems: [] };
        var totalAmount = 0;
        salesOrder.Id = $('#Id').val();
        salesOrder.OrderDate = $('#OrderDate').val();
        salesOrder.OrderNumber = $('#OrderNumber').val();
        salesOrder.CustomerId = $('#CustomerId').val();

        var oTable = $('.tbl').dataTable().fnGetData();

        for (var i = 0; i < oTable.length; i++) {
            if (Number($('#Id').val()) > 0) {
                salesOrderItems.OrderId = $('#Id').val();
            }
            else {
                salesOrderItems.OrderId = 0;
            }

            salesOrderItems.Id = oTable[i][0];
            salesOrderItems.ProductId = oTable[i][1];
            salesOrderItems.UnitPrice = oTable[i][3];
            salesOrderItems.Quantity = oTable[i][4];
            salesOrderItems.Amount = oTable[i][5];

            salesOrder.OrderItems.push(salesOrderItems);
            totalAmount = totalAmount + Number(oTable[i][5]);
            salesOrderItems = { Id: 0, OrderId: 0, ProductId: 0, UnitPrice: "", Quantity: "", Amount: "" };
        }

        salesOrder.TotalAmount = totalAmount.toFixed(2);
        $('#TotalAmount').val(totalAmount.toFixed(2).toString());

        $.ajax({
            url: '/Order/Edit',
            data: JSON.stringify(salesOrder),
            contentType: "application/json",
            dataType: 'JSON',
            type: 'POST',
            success: function (result) {
                if (result.salesOrderId > 0) {
                    window.location.href = "/Order/Index";
                }
                else {
                    alert("Error: Order not saved");
                    return false;
                }
            },
            error: function (result) {
                alert("Error: Order not saved");
                return false;
            }
        });
    }

</script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Order</legend>

        @Html.HiddenFor(model => model.Id)

        <div class="editor-label">
            @Html.LabelFor(model => model.OrderDate)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.OrderDate)
            @Html.ValidationMessageFor(model => model.OrderDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.OrderNumber)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.OrderNumber, new { maxlength = 10 })
            @Html.ValidationMessageFor(model => model.OrderNumber)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CustomerId)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.CustomerId, ViewData["Customers"] as List<SelectListItem>, "Please select customer", new { @Style = "height:30px" })
            @Html.ValidationMessageFor(model => model.CustomerId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.TotalAmount)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.TotalAmount, new { ReadOnly = "true" })
            @Html.ValidationMessageFor(model => model.TotalAmount)
        </div>


    </fieldset>


    // Add Item Details
    <div style="width:100%; padding-top:15px;">
        <h2>Item Details</h2>
        <br />
        <div style="width:20%;float:left">
            <label>Product Name: </label>
            @Html.DropDownList("DrpProducts", ViewData["Products"] as List<SelectListItem>, "Select Products", new { @Style = "height:30px; width:150px" })
        </div>

        <div style="width:20%;float:left">
            <label>Unit Price: </label>
            @Html.TextBox("UnitPrice", "", new { onkeyup = "CalculateAmount();", @Style = "height:20px; width:70px" })
        </div>

        <div style="width:20%;float:left">
            <label>Quantity: </label>
            @Html.TextBox("Quantity", "", new { onkeyup = "CalculateAmount();", @Style = "height:20px; width:70px" })
        </div>

        <div style="width:20%;float:left">
            <label>Amount: </label>
            @Html.TextBox("Amount", "", new {ReadOnly="true", @Style = "height:20px; width:100px"  })
        </div>

        <div style="width:20%;float:left;padding-top:17px;">
            <input type="button" name="BtnAdd" id="BtnAdd" value="Add Item" onclick="AddItem();" />
        </div>

    </div>
    <br />
    <br />

    <table id="tbl" class="tbl" cellpadding="5" cellspacing="5" style="border:1px solid #808080">
        <thead>
            <tr>
                <th></th>
                <th></th>
                <th>Product Name</th>
                <th>Unit Price</th>
                <th>Quantity</th>
                <th>Amount</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.OrderItems != null)
            {
                foreach (var item in Model.OrderItems)
                {
                    <tr>
                        <td>@item.Id</td>
                        <td>@item.ProductId</td>
                        <td>@item.Product.ProductName</td>
                        <td>@item.UnitPrice</td>
                        <td>@item.Quantity</td>
                        <td>@item.Amount</td>
                    </tr>
                }
            }
        </tbody>
    </table>

    <p>
        <input type="button" value="Save" onclick="SaveOrder();" />
    </p>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
